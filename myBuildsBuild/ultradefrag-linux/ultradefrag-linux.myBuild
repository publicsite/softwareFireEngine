#!/bin/sh
actualname="ultradefrag-linux"
version=""
filename="${actualname}-${version}"
extension=".tar.gz"
website="https://github.com/749/UltraDefrag4Linux"
source="https://github.com/749/UltraDefrag4Linux/archive/refs/heads/develop.zip"
sumUrl=""

#functions

do_get(){
	"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}"
	mv "${myBuildSourceDest}/develop.zip" "${myBuildSourceDest}/ultradefrag-linux.zip"
	return "$?"
}

do_extract(){
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/ultradefrag-linux.zip" "${myBuildExtractDest}"
	return "$?"
}


do_build(){
#here you put commands like configure and make

cd "${myBuildExtractDest}/UltraDefrag4Linux-develop/src"

sed -i "s?#include \"layout.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"attrib.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"volume.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"mft.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"dir.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"inode.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"bitmap.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"lcnalloc.h\"??g" wincalls/ntfs-3g.c
sed -i "s?#include \"ntfstime.h\"??g" wincalls/ntfs-3g.c
make

return "$?"
}

do_install(){
#here you put the installation commands, like make install
cd "${myBuildExtractDest}/${filename}"
make DESTDIR=${SYSROOT} install
return "$?"
}

do_package(){
#here you package the files
cp -a "${myBuildsDir}/${actualname}/${actualname}.control" "${CONTDIR}/control"
printf "Architecture: %s\n" "$(printf "%s\n" "${TARGET}" | cut -d "-" -f 1-2)" >> "${CONTDIR}/control"

printf "2.0" > "${BUILDDIR}/debian-binary"

cd "${CONTDIR}"
tar --numeric-owner --group=0 --owner=0 -czf "${BUILDDIR}/control.tar.gz" ./*

cd "${SYSROOT}"
tar --numeric-owner --group=0 --owner=0 -czf "${BUILDDIR}/data.tar.gz" ./*

cd "${BUILDDIR}"
tar --numeric-owner --group=0 --owner=0 -czf "${PKGDIR}/${actualname}_${version}.$(printf "%s" "${TARGET}" | cut -d "-" -f 1-2).ipk" ./debian-binary ./control.tar.gz ./data.tar.gz

rm -rf "${CONTDIR}"
rm -rf "${SYSROOT}"
mkdir -p "${CONTDIR}"
mkdir -p "${SYSROOT}"
rm -f "${BUILDDIR}/debian-binary"
rm -f "${BUILDDIR}/control.tar.gz"
rm -f "${BUILDDIR}/data.tar.gz"

cd "${myBuildHome}"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0" "$2" "$3"
fi