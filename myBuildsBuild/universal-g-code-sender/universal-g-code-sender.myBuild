#!/bin/sh

actualname="Universal-G-Code-Sender"
minorversion="11"
version="2.0"
filename="${actualname}-${version}.${minorversion}"
extension=".tar.gz"
source="https://github.com/winder/${actualname}/archive/refs/tags/v${version}.${minorversion}${extension}"
sumUrl=""


actualname2="mavencentralreconstruction"
version2="1"
filename2="${actualname2}-${version2}"
extension2=".tar.gz"
source2="https://github.com/publicsite/MavenCentralReconstruction/archive/refs/heads/main${extension2}"
sumUrl=""

#functions

do_get(){

	if [ "$1" = stage1 ]; then
		"${myBuildHelpersDir}"/myBuildGet.sh "${source2}" "${myBuildSourceDest}"
		mv "${myBuildSourceDest}/main${extension2}" "${myBuildSourceDest}/${filename2}${extension2}"
		"${myBuildHelpersDir}"/myBuildGet.sh "${source}" "${myBuildSourceDest}"
		mv "${myBuildSourceDest}/v${version}.${minorversion}${extension}" "${myBuildSourceDest}/${filename}${extension}"
		return "$?"
	else
		cd "${myBuildExtractDest}/${actualname}"
		#get dependency sources
		./callGetSources.sh "com.willwinder.universalgcodesender" "ugs-parent" "${version}-SNAPSHOT"
	fi
}

do_extract(){
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/${filename2}${extension2}" "${myBuildExtractDest}"
	mv "${myBuildExtractDest}/MavenCentralReconstruction"* "${myBuildExtractDest}/${actualname}" 
	mkdir -p "${myBuildExtractDest}/${actualname}/sources/structure/com.willwinder.universalgcodesender/ugs-parent/${version}-SNAPSHOT"
	"${myBuildHelpersDir}"/myBuildExtract.sh "${myBuildSourceDest}/${filename}${extension}" "${myBuildExtractDest}/${actualname}/sources/structure/com.willwinder.universalgcodesender/ugs-parent/${version}-SNAPSHOT"
	mv "${myBuildExtractDest}/${actualname}/sources/structure/com.willwinder.universalgcodesender/ugs-parent/${version}-SNAPSHOT/${filename}" "${myBuildExtractDest}/${actualname}/sources/structure/com.willwinder.universalgcodesender/ugs-parent/${version}-SNAPSHOT/extractedSources"
	ln -s "extractedSources/pom.xml" "${myBuildExtractDest}/${actualname}/sources/structure/com.willwinder.universalgcodesender/ugs-parent/${version}-SNAPSHOT/ugs-parent-${version}-SNAPSHOT.pom"
	return "$?"
}


do_build(){
#here you put commands like configure and make

cd "${myBuildExtractDest}/${actualname}"

#run the reconstruction
./reconstruct6.sh

#build the classes
./firstParse5.sh

return "$?"
}

do_install(){
#here you put the installation commands, like make install
cd "${myBuildExtractDest}/${filename}"
mkdir "${SYSROOT}/usr/lib/${actualname}"
mv src/${actualname}.jar "${SYSROOT}/usr/lib/${actualname}"
echo '#!/bin/sh' > "${SYSROOT}/usr/bin/${actualname}"
echo 'java -jar /usr/lib/${actualname}/${actualname}.jar' >> "${SYSROOT}/usr/bin/${actualname}"
chmod +x "${SYSROOT}/usr/bin/${actualname}"

make DESTDIR=${SYSROOT} install
return "$?"
}

do_package(){
#here you package the files
cp -a "${myBuildsDir}/${actualname}/${actualname}.control" "${CONTDIR}/control"
printf "Architecture: %s\n" "$(printf "%s\n" "${TARGET}" | cut -d "-" -f 1-2)" >> "${CONTDIR}/control"

printf "2.0" > "${BUILDDIR}/debian-binary"

cd "${CONTDIR}"
tar --numeric-owner --group=0 --owner=0 -czf "${BUILDDIR}/control.tar.gz" ./*

cd "${SYSROOT}"
tar --numeric-owner --group=0 --owner=0 -czf "${BUILDDIR}/data.tar.gz" ./*

cd "${BUILDDIR}"
tar --numeric-owner --group=0 --owner=0 -czf "${PKGDIR}/${actualname}_${version}.$(printf "%s" "${TARGET}" | cut -d "-" -f 1-2).ipk" ./debian-binary ./control.tar.gz ./data.tar.gz

rm -rf "${CONTDIR}"
rm -rf "${SYSROOT}"
mkdir -p "${CONTDIR}"
mkdir -p "${SYSROOT}"
rm -f "${BUILDDIR}/debian-binary"
rm -f "${BUILDDIR}/control.tar.gz"
rm -f "${BUILDDIR}/data.tar.gz"

cd "${myBuildHome}"
return "$?"
}

if [ "$myBuildDoNotCallMainFunction" != "1" ]; then
#main code goes here
"${myBuildHelpersDir}"/argumentHelper.sh "$1" "$0" "$2" "$3"
fi